{{> "pageHeader"}}

<div class="ibox">
    <div class="ibox-title">
        <div class="ibox-tools">
            <ul class="list-inline">
                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#"><span class="fa {{i18n "icon.dropdownMenu"}}"></span></a>
                    <ul class="dropdown-menu dropdown-ibox">
                        <li><a href="#">{{i18n "button.siloBlend"}}</a></li>
                        <li><a href="#">{{i18n "button.manualBlend"}}</a></li>
                    </ul>
                </li>
            </ul>
        </div>
        <h5>{{i18n "feature.selectBlend.title"}}</h5>
    </div>
    <div class="ibox-content">
		{{> "select-blend-form"}}
    </div>
</div>

{{#contentFor "pageScripts"}}
    <script src="js/createBlend.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            var _departments = [
				{{#departments}}
                    {
                        "id": "{{id}}",
                        "department": "{{{department}}}",
                        "description": "{{{description}}}",
                        "plannerCodes": [
							{{#plannerCodes}}
                                "{{this}}"{{#unless @last}},{{/unless}}
							{{/plannerCodes}}
                        ]
                    }{{#unless @last}},{{/unless}}
				{{/departments}}
            ];

            var _plannerCodes = [
				{{#plannerCodes}}
                    {
                        "id": "{{id}}",
                        "plannerCode": "{{{plannerCode}}}",
                        "description": "{{{description}}}",
                        "productSKUs": "{{{productSKUs}}}",
                        "blendSpecs": [
							{{#blendSpecs}}
                                "{{this}}"{{#unless @last}},{{/unless}}
							{{/blendSpecs}}
                        ]
                    }{{#unless @last}},{{/unless}}
				{{/plannerCodes}}
            ];

            var _blendSpecs = [
				{{#blendSpecs}}
                    {
                        "id": "{{id}}",
                        "blendSpec": "{{{blendSpec}}}",
                        "description": "{{{description}}}"
                    }{{#unless @last}},{{/unless}}
				{{/blendSpecs}}
            ];

            function getPlannerCodeOption(id, plannerCode) {
                var plannerCodeOption = '<option value="' + id + '">' + plannerCode + '</option>';
                return plannerCodeOption;
            }

            function getBlendSpecOption(id, blendSpec) {
                var blendSpecOption = '<option value="' + id + '">' + blendSpec + '</option>';
                return blendSpecOption;
            }

            function department_onChange() {
                var $selectedDepartment = $('#department').find('option:selected');
                var _selectedDepartment = _.find(_departments, {'id': $selectedDepartment.val()});

                var plannerCodes = _.filter(_plannerCodes, function (_plannerCode) {
                    return _selectedDepartment.plannerCodes.indexOf(_plannerCode.id) !== -1;
                });

                $('#departmentDescription').html(_selectedDepartment.description);
                $('#plannerCodeDescription').html('');
                $('#productSKUs').html('');

                var plannerCodeOptions = '<option value="" selected disabled>{{i18n "label.plannerCode"}}</option>';
                _.forEach(plannerCodes, function (plannerCode) {
                    plannerCodeOptions += getPlannerCodeOption(plannerCode.id, plannerCode.plannerCode);
                });
                $('#plannerCode').html(plannerCodeOptions).trigger("chosen:updated");
            }

            function plannerCode_onChange() {
                var $selectedPlannerCode = $('#plannerCode').find('option:selected');
                var _selectedPlannerCode = _.find(_plannerCodes, {'id': $selectedPlannerCode.val()});

                var blendSpecs = _.filter(_blendSpecs, function (_blendSpec) {
                    return _selectedPlannerCode.blendSpecs.indexOf(_blendSpec.id) !== -1;
                });

                $('#plannerCodeDescription').html(_selectedPlannerCode.description);
                $('#productSKUs').html(JSON.stringify(_selectedPlannerCode.productSKUs));

                var blendSpecOptions = '<option value="" selected disabled>{{i18n "label.blendSpec"}}</option>';
                _.forEach(blendSpecs, function (blendSpec) {
                    blendSpecOptions += getBlendSpecOption(blendSpec.id, blendSpec.blendSpec);
                });
                $('#blendSpec').html(blendSpecOptions).trigger("chosen:updated");
            }

            function blendSpec_onChange() {
                var $selectedBlendSpec = $('#blendSpec').find('option:selected');
                var _selectedBlendSpec = _.find(_blendSpecs, {'id': $selectedBlendSpec.val()});

                $('#blendSpecDescription').html(_selectedBlendSpec.description);
            }

            $('#department').on('change', function (evt, params) {
                department_onChange();
            });

            $('#plannerCode').on('change', function (evt, params) {
                plannerCode_onChange();
            });

            $('#blendSpec').on('change', function (evt, params) {
                blendSpec_onChange();
            });

            $('#lotPreferences').click(function (e) {
                if (e) {
                    e.preventDefault();
                }
                window.location.href = 'lot-preferences';
            });
        });
    </script>
{{/contentFor}}
